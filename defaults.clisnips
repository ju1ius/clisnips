<?xml version="1.0" encoding="utf-8" ?>
<snippets>

    <!-- TAR SNIPPETS -->
    <snippet>
        <title>Create a tarball.</title>
        <command>tar -cvf {destination} {source}</command>
        <tag>archive,tar</tag>
        <doc>{destination} (path) Path of the tarball to create
{source} (path) The source to compress</doc>
    </snippet>
    <snippet>
        <title>Extract a tarball.</title>
        <command>tar xvf {source}</command>
        <tag>archive,tar</tag>
        <doc>{source} (path) The tarball to extract</doc>
    </snippet>
    <snippet>
        <title>Create a gzipped tarball.</title>
        <command>tar -cvzf {destination} {source}</command>
        <tag>archive,tar,gzip</tag>
        <doc>{destination} (path) Path of the tarball to create
{source} (path) The source to compress</doc>
    </snippet>
    <snippet>
        <title>Extract a gzipped tarball.</title>
        <command>tar xvzf {source}</command>
        <tag>archive,tar,gzip</tag>
        <doc>{source} (path) The tarball to extract.</doc>
    </snippet>
    <snippet>
        <title>Create a bz2 compressed tarball.</title>
        <command>tar -cjvf {destination} {source}</command>
        <tag>archive,tar,bz2</tag>
        <doc>{destination} (path) Path of the tarball to create
{source} (path) The source to compress</doc>
    </snippet>
    <snippet>
        <title>Extract a bz2 compressed tarball.</title>
        <command>tar xjvf {source}</command>
        <tag>archive,tar,bz2</tag>
        <doc>{source} (path) The tarball to extract</doc>
    </snippet>

    <!-- GIT SNIPPETS -->
    <snippet>
        <title>Revert last (not pushed) commit</title>
        <command>git revert {commit_sha}</command>
        <tag>git</tag>
        <doc>{commit_sha} (string) [HEAD] The commit id to revert to.</doc>
    </snippet>
    <snippet>
        <title>Undo last commit, leaving files and index untouched</title>
        <command>git reset --soft HEAD~1</command>
        <tag>git,reset</tag>
        <doc></doc>
    </snippet>
    <snippet>
        <title>Temporarily backup (stash) uncommited changes</title>
        <command>git stash save "{message}"</command>
        <tag>git,stash</tag>
        <doc>{message} (string) A descriptive message to reference your backup later.</doc>
    </snippet>

    <!-- APT / DPKG -->

    <snippet>
        <title>List all files installed by a given package</title>
        <command>dpkg -L {package}</command>
        <tag>dpkg,apt</tag>
        <doc>{package} Package name.</doc>
    </snippet>
    <snippet>
        <title>List which package installed given command</title>
        <command>dpkg -S $(which {command})</command>
        <tag>dpkg,apt</tag>
        <doc>{command} Command name</doc>
    </snippet>
    <snippet>
        <title>List which package installed given file or directory</title>
        <command>dpkg -S {path}</command>
        <tag>dpkg,apt</tag>
        <doc>{path} (path)</doc>
    </snippet>
    <snippet>
        <title>Find version of a package</title>
        <command>dpkg -l {package}</command>
        <tag>dpkg,apt</tag>
        <doc>{package} Package name.</doc>
    </snippet>

    <!-- MISC -->

    <snippet>
        <title>Compress PDF</title>
        <command>ghostscript -dSAFER -dNOPAUSE -dBATCH -sDEVICE=pdfwrite \
    -dCompatibilityLevel=1.4 \
    -dUseCIEColor -dColorConversionStrategy=/sRGB \
    -dPDFSETTINGS=/{quality} \
    -sOUTPUTFILE="{infile}" -f "{outfile}"</command>
        <tag>pdf,ghostscript,compression</tag>
        <doc>{infile} (file) The PDF file to compress.
{outfile} (path) The output file path.
{quality} (string) ["screen", "ebook", *"printer", "prepress"]
    PDF quality from "screen" (lowest) to "prepress" (highest)</doc>
    </snippet>

    <snippet>
        <title></title>
        <command></command>
        <tag></tag>
        <doc></doc>
    </snippet>

</snippets>
