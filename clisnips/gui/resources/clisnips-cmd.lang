<?xml version="1.0" encoding="UTF-8"?>
<language id="clisnips-cmd" _name="CliSnips Command" version="2.0" _section="Other">

    <styles>
        <style id="replacement-field" _name="Replacement Field" map-to="def:character" />
        <style id="string" _name="String" map-to="def:string" />
        <style id="escaped-char" _name="Escaped Character" map-to="def:special-char" />
    </styles>

    <definitions>

        <define-regex id="identifier">[_a-zA-Z][_a-zA-Z0-9]*</define-regex>
        <define-regex id="integer">\d+</define-regex>
        <define-regex id="flag">--?[a-zA-Z0-9][\w-]*</define-regex>
        <define-regex id="escaped-char">/\\./s</define-regex>

        <!-- Python Format String Syntax -->

        <define-regex id="fmt-conv">\![rsa]</define-regex>
        <define-regex id="fmt-index">[^\]]+</define-regex>
        <define-regex id="fmt-element-index">\%{integer}|\%{fmt-index}</define-regex>
        <define-regex id="fmt-arg-name">\%{identifier}|\%{integer}</define-regex>
        <define-regex id="fmt-field-name" extended="true">
            \%{fmt-arg-name}
            (?:
                \. \%{identifier}
                |
                \[ \%{fmt-element-index} \]
            )*
        </define-regex>

        <!-- Python Format Specification Syntax -->

        <define-regex id="fmt-spec-type">[bcdeEfFgGnosxX%]</define-regex>
        <define-regex id="fmt-spec-precision">\.\%{integer}</define-regex>
        <define-regex id="fmt-spec-width">\%{integer}</define-regex>
        <define-regex id="fmt-spec-sign">[\x20+-]</define-regex>
        <define-regex id="fmt-spec-align">[&lt;&gt;=^]</define-regex>
        <define-regex id="fmt-spec-fill">.</define-regex>
        <define-regex id="fmt-spec" extended="true">
            :
            (?:\%{fmt-spec-fill}?\%{fmt-spec-align})?
            \%{fmt-spec-sign}?
            \#?
            0?
            \%{fmt-spec-width}?
            ,?
            \%{fmt-spec-precision}?
            \%{fmt-spec-type}?
        </define-regex>

        <context id="replacement-field" style-ref="replacement-field">
            <match extended="true">
                (?&lt;!{)\{(?:{{)*     # odd number of left braces
                (?:
                    \%{flag}
                    |
                    \%{fmt-field-name}?
                    \%{fmt-conv}?
                    \%{fmt-spec}?
                )
                \}
            </match>
        </context>

        <context id="escaped-char" style-ref="escaped-char">
            <match>\%{escaped-char}</match>
        </context>

        <context id="dq-string" style-ref="string">
            <start>["']</start>
            <end>\%{0@start}</end>
            <include>
                <context ref="escaped-char" />
                <context ref="replacement-field" />
            </include>
        </context>
        <context id="sq-string" style-ref="string">
            <start>'</start>
            <end>'</end>
            <include>
                <context ref="escaped-char" />
                <context ref="replacement-field" />
            </include>
        </context>

        <context id="clisnips-cmd" class="no-spell-check">
            <include>
                <context ref="escaped-char" />
                <context ref="replacement-field" />
                <context ref="dq-string" />
                <context ref="sq-string" />
            </include>
        </context>
    
    </definitions>
</language>
